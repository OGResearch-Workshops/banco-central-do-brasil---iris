% [IrisToolbox] autogenerated preparsed model source code 09-May-2022 07:57:36
%
% * model-source/world.model
% * model-source/macro.model
% * model-source/bankCapital.model
% * model-source/creditCreation.model
% * model-source/creditRisk.model
% * model-source/interestRates.model
% * model-source/loanPerformance.model
% * model-source/prudentialProvisions.model
% * model-source/financialProvisions.model
% * model-source/postprocessor.model
% * model-source/preprocessor.model


!variables

    "Foreign demand gap" yw_gap
    "Foreign short-term rate, FCY" rw
    "Foreign real short-term rate, FCY" rrw_tnd
    "Foreign CPI" cpiw
    "Foreign CPI, Rate of change" roc_cpiw


!log-variables !all-but

    rw, rrw_tnd


!parameters


    "S/S Real short-term rate, foreign currency" ss_rrw
    "S/S Foreign CPI, Rate of change" ss_roc_cpiw


    "Autoregression in foreign demand gap" c0_yw_gap
    "Autoregression in foreign short-term rate" c0_rw
    "Autoregression in real foreign short-term rate" c0_rrw_tnd
    "Autoregression in foreign CPI inflation" c0_roc_cpiw


!shocks

    "Tune on foreign demand gap" tune_yw_gap
    "Tune on foreign short-term rate" tune_rw
    "Tune on real foreign short-term rate trend" tune_rrw_tnd
    "Tune on to foreign CPI inflation" tune_roc_cpiw

    "Shock to foreign demand gap" shock_yw_gap
    "Shock to foreign short-term rate, FCY" shock_rw
    "Shock to real foreign short-term rate trend, FCY" shock_rrw_tnd
    "Shock to foreign CPI inflation" shock_roc_cpiw


!equations

    "Foreign demand gap"
    log(yw_gap) = + c0_yw_gap * log(yw_gap{-1}) + tune_yw_gap + shock_yw_gap !! yw_gap = 1;


    "Short-term rate, FCY"
    rw = c0_rw * rw{-1} + (1 - c0_rw) * ((1 + ss_rrw) * ss_roc_cpiw - 1) + tune_rw + shock_rw !! rw = ((1 + ss_rrw) * ss_roc_cpiw - 1);


    "Real foreign short-term rate trend, FCY"
    rrw_tnd = + c0_rrw_tnd * rrw_tnd{-1} + (1 - c0_rrw_tnd) * ss_rrw + tune_rrw_tnd + shock_rrw_tnd !! rrw_tnd = ss_rrw;


    "Foreign CPI inflation"
    log(roc_cpiw) = c0_roc_cpiw * log(roc_cpiw{-1}) + (1 - c0_roc_cpiw) * log(ss_roc_cpiw) + tune_roc_cpiw + shock_roc_cpiw !! roc_cpiw = ss_roc_cpiw;

    roc_cpiw = cpiw / cpiw{-1};


!autoswaps-simulate

    yw_gap := tune_yw_gap;
    roc_cpiw := tune_roc_cpiw;
    rw := tune_rw;
    rrw_tnd := tune_rrw_tnd;


!variables

pa, bubble

    "Real GDP" y
    "Nominal GDP" ny
    "GDP deflator" py
    "Real GDP, Rate of change" roc_y
    "Real GDP, Four-quarter rate of change" roc4_y
    
    "Nominal GDP, Rate of change" roc_ny
    "GDP deflator, Rate of change" roc_py
    "GDP gap" y_gap
    "GDP trend (potential)" y_tnd
    "GDP trend (potential), Rate of change" roc_y_tnd
    "Real future income proxy" fws_y

    "CPI" cpi
    "CPI, Rate of change" roc_cpi
    "CPI, Four-quarter rate of change" roc4_cpi

    "Inflation expectations" roc_cpi_exp

    "Short-term cash rate" r
    "Real short-term rate" rr
    "Real short-term rate gap" rr_gap
    "Real short-term rate trend" rr_tnd
    "Short-term cash rate trend" r_tnd

    "Nominal exchange rate" e
    "Nominal exchange rate, Rate of change" roc_e
    "Nominal exchange rate expectations" e_exp
    "Real exchange rate" re
    "Real exchange rate trend" re_tnd
    "Real exchange rate trend" roc_re_tnd
    "Real exchange rate gap" re_gap
    "Real exchange rate gap, Rate of change" roc_re_gap
    "Nominal exchange rate depreciation gap" roc_e_gap
    "Interest disparity" prem
    "Interest disparity trend" prem_tnd
    "Interest disparity gap" prem_gap
    "Short-term cash rate, unconstrained" r_uc


!log-variables !all-but

    r, rr, r_tnd, rr_tnd, rr_gap, prem, prem_tnd, prem_gap


!parameters

c0_bubble

    
    "S/S Real GDP, Rate of change" ss_roc_y
    "S/S CPI, Rate of change" ss_roc_cpi
    "S/S Real short-term rate" ss_rr
    "S/S Real exchange rate, Rate of change" ss_roc_re
    "S/S Discount rate in future income proxy" ss_disc_fws_y

    
    "Autoregression in GDP Gap" c0_y_gap
    "Response in GDP gap to future income proxy" c1_y_gap
    "Response i nGDP gap to real short-term rate" c2_y_gap
    "Response in GDP gap to new lending conditions" c3_y_gap
    "Response in GDP gap to real exchange rate gap" c4_y_gap
    "Response in GDP gap to foreign demand" c5_y_gap

    "Sensitivity of discount rate in future income proxy to lending conditions" c1_fws_y

    "Autoregression in real GDP trend" c0_roc_y_tnd
    "Hysteresis in real GDP trend" c1_roc_y_tnd

    "Autoregression in CPI inflation" c0_roc_cpi
    "Response in CPI inflation to GDP gap" c1_roc_cpi
    "Response in CPI inflation to RER gap" c2_roc_cpi
    "Response in CPI inflation to RER gap change" c3_roc_cpi

    "Weight on model-consistent expectations in inflation expectations" c1_roc_cpi_exp

    "Autoregression in short-term rate" c0_r
    "Response in short-term rate to inflation" c1_r
    "Response in short-term rate to GDP gap" c2_r
    "Response in short-term rate to FX gap" c3_r

    "Autoregression in real short-term rate trend" c0_rr_tnd

    "Weight on model-consistent expectations in exchange rate expectations" c1_e_exp
    "Response in interest disparity to lending conditions" c1_prem
    "Autoregression in autonomous cyclical component in interest disparity" c0_prem_gap

    "Autoregression in real exchange rate trend" c0_roc_re_tnd
    "Response in real exchange rate trend to real exchange rate gap" c1_roc_re_tnd

    "floor to the policy rate" r_floor


!shocks

shock_bubble

    "Tunes on GDP gap" tune_y_gap
    "Tune on GDP trend growth" tune_roc_y_tnd
    "Tune on CPI" tune_roc_cpi
    "Tune on short term cash rate, LCY" tune_r
    "Tune on autonomous cyclical component in interest disparity" tune_prem_gap
    "Tune on real short-term rate trend" tune_rr_tnd


    "Shock to GDP gap" shock_y_gap
    "Shock to GDP trend growth" shock_roc_y_tnd
    "Shock to GDP trend level" shock_y_tnd
    "Shock to GDP deflator" shock_roc_py
    "Shock to CPI" shock_roc_cpi
    "Shock to short term cash rate, LCY" shock_r
    "Shock to exchange rate" shock_e
    "Shock to real exchange rate trend" shock_roc_re_tnd
    "Shock to autonomous cyclical component in interest disparity" shock_prem_gap
    "Shock to real short-term rate trend" shock_rr_tnd


!equations


    "GDP trend-gap decomposition"
    y = y_tnd * y_gap;

    "Aggregate demand equation"
    log(y_gap) = c0_y_gap * log(y_gap{-1}) + c1_y_gap * log(pa/y) - c2_y_gap * 4*rr_gap - c3_y_gap * 4*new_rl_full_spread_gap + c4_y_gap * log(re_gap{-1}) + c5_y_gap * log(yw_gap) + c2_y_gap * (r_uc-r) + shock_y_gap + tune_y_gap !! y_gap = 1;

    "GDP trend (potential GDP) assumptions"
    log(roc_y_tnd) = c0_roc_y_tnd * log(roc_y_tnd{-1}) + (1 - c0_roc_y_tnd) * log(ss_roc_y) + c1_roc_y_tnd * log(y_gap) + shock_roc_y_tnd + tune_roc_y_tnd !! roc_y_tnd = ss_roc_y;

    "GDP deflator assumptions"
    log(roc_py) = log(roc_cpi) + shock_roc_py !! roc_py = roc_cpi;

    "Nominal GDP identity"
    ny = py * y;


    "Discounted forward sum of real GDP, normalized to current"
    fws_y = (1 - 1/(1 + ss_disc_fws_y)) * y + 1/(1 + ss_disc_fws_y + c1_fws_y*new_rl_full_spread_gap) * fws_y{+1}/ss_roc_y !! fws_y = y;


    pa = fws_y * bubble !! pa = fws_y;

    log(bubble) = c0_bubble * log(bubble{-1}) + shock_bubble !! bubble = 1;


    "Phillips curve"
    log(roc_cpi) = c0_roc_cpi * log(roc_cpi{-1}) + (1 - c0_roc_cpi) * log(roc_cpi_exp) + c1_roc_cpi * log(y_gap) + c2_roc_cpi * log(re_gap) + c3_roc_cpi * log(roc_re_gap) + shock_roc_cpi + tune_roc_cpi !! roc_cpi = ss_roc_cpi;

    "Inflation expectations"
    log(roc_cpi_exp) = c1_roc_cpi_exp * log(roc_cpi{+1}) + (1 - c1_roc_cpi_exp) * log(ss_roc_cpi) !! roc_cpi_exp = ss_roc_cpi;


    "Monetary policy reaction function"
    r = 0.1*r_uc + (1-0.1)*max(r_uc, r_floor)
    !! r = r_uc; 
    
    r_uc = + c0_r * r{-1} + (1 - c0_r) * [ + r_tnd + c1_r*(log(roc4_cpi{+3})/4 - log(ss_roc_cpi)) + c2_r*log(y_gap) + c3_r*log(roc_e_gap) ] + shock_r + tune_r !! r = r_tnd;

    1 + r_tnd = (1 + rr_tnd) * ss_roc_cpi !! r_tnd = (1 + ss_rr) * ss_roc_cpi - 1;

    1 + rr = (1 + r) / roc_cpi_exp !! rr = ss_rr;

    rr_gap = rr - rr_tnd !! rr_gap = 0;

    rr_tnd = + c0_rr_tnd * rr_tnd{-1} + (1 - c0_rr_tnd) * ss_rr + shock_rr_tnd + tune_rr_tnd !! rr_tnd = ss_rr;


    "Uncovered interest parity"
    (1 + r) = (1 + rw) * e_exp/e * (1 + prem) * exp(shock_e) !! roc_e = (ss_roc_re * ss_roc_cpi / ss_roc_cpiw);


    "Interest disparity"
    prem = prem_tnd + prem_gap + c1_prem*new_rl_full_spread_gap !! prem = ((1 + ss_rr) / (1 + ss_rrw) / ss_roc_re - 1);


    "Interest disparity trend"
    (1 + rr_tnd) = (1 + rrw_tnd) * roc_re_tnd{+1} * (1 + prem_tnd) !! prem_tnd = ((1 + ss_rr) / (1 + ss_rrw) / ss_roc_re - 1);


    "Interest disparity gap"
    prem_gap = + c0_prem_gap * prem_gap{-1} + shock_prem_gap + tune_prem_gap !! prem_gap = 0;


    "Exchange rate expectations"
    log(e_exp) = c1_e_exp * log(e{+1}) + (1 - c1_e_exp) * log(e{-1} * (ss_roc_re * ss_roc_cpi / ss_roc_cpiw)^2) !! e_exp = e{+1};


    "Real exchange rate definition"
    re = e * cpiw / cpi;


    "Real exchange rate trend-gap decomposition"
    re = re_tnd * re_gap;


    "Real exchange rate trend assumptions"
    log(roc_re_tnd) = + c0_roc_re_tnd * log(roc_re_tnd{-1}) + (1 - c0_roc_re_tnd) * log(ss_roc_re) + c1_roc_re_tnd * log(re_gap) + shock_roc_re_tnd !! roc_re_tnd = ss_roc_re;


    "Nominal exchange rate depreciation gap"
    roc_e_gap = roc_e / (roc_re_tnd / &roc_cpiw*&roc_cpi);


        roc_ny = ny / ny{-1};
    
        roc_y = y / y{-1};
    
        roc_y_tnd = y_tnd / y_tnd{-1};
    
        roc_e = e / e{-1};
    
        roc_py = py / py{-1};
    
        roc_cpi = cpi / cpi{-1};
    
        roc_re_tnd = re_tnd / re_tnd{-1};
    
        roc_re_gap = re_gap / re_gap{-1};


        roc4_cpi = cpi / cpi{-4};
    
        roc4_y = y / y{-4};


!autoswaps-simulate

    y_gap := tune_y_gap;
    roc_y_tnd := tune_roc_y_tnd;
    roc_cpi := tune_roc_cpi;
    r := tune_r;
    rr_tnd := tune_rr_tnd;
    e := tune_prem_gap;


!variables

    "Total net assets" tna
    "Financial bank capital, closing" bk
    "Regulatory capital" bg
    "Return on bank capital" rbk
    "Standard capital adequacy ratio" car
    "Minimum regulatory car" car_min
    "Comfort level of standard capital adequacy ratio" car_tar
    "Average effective risk weight" riskw
    "Capital adequacy risk surcharge" rx
    "Non-equity liabilities" d
    "Other net assets" ona
    "Open net foreign exchange position" onfx
    "Regulatory to financial bank capital ratio" bg_to_bk


!parameters

    
    "S/S Average Effective Risk Weight" ss_riskw
    "S/S Minimum Regulatory CAR" ss_car_min
    "S/S Comfort Level of CAR Buffers" ss_car_exc
    "S/S Open Net Foreign Position" ss_onfx
    "S/S Share of Other Net Assets in Total Net Assets" ss_ona_to_tna
    "S/s Regulatory bank capital" ss_bg_to_bk


    "Add-hoc reaction to capital buffer" c1_bk
    "Autoregression in average effective risk weight" c0_riskw
    "Autoregression in minimum regulatory CAR" c0_car_min
    "Other profit and loss to total net assets ratio" c1_rbk_other
    "Autoregression in other net assets" c0_ona
    "Autoregression in regulatory to financial bank capital ratio" c0_bg_to_bk


    "Capital adequacy stress function parameter" c1_rx
    "Capital adequacy stress function parameter" c2_rx
    "Capital adequacy stress function parameter" c3_rx
    "Capital adequacy stress function parameter" c4_rx
    "Capital adequacy stress function parameter" c5_rx

    "Floor on return on bank capital" floor_rbk


!shocks

    "Shock to Return on Bank Capital" shock_rbk
    "Shock to Regulatory Risk Weights" shock_riskw
    "Shock to Open Net Foreign Exchange Position" shock_onfx
    "Shock to minimum regulatory CAR" shock_car_min
    "Shock to other net assets" shock_ona
    "Shock to regulatory to financial bank capital ratio" shock_bg_to_bk


!log-variables !all-but

    rbk, car, car_min, car_tar, riskw, onfx
    rx


!postprocessor

    d_fcy_lag := (d{-1} - d_lcy{-1});

    
        prof_int_loans_HH := (rl_HH{-1}*(lp0_HH + lnc0_HH));
    
        prof_int_loans_MG := (rl_MG{-1}*(lp0_MG + lnc0_MG));
    
        prof_int_loans_NFC := (rl_NFC{-1}*(lp0_NFC + lnc0_NFC));
    
    prof_int_loans := ( + (rl_HH{-1}*(lp0_HH + lnc0_HH)) + (rl_MG{-1}*(lp0_MG + lnc0_MG)) + (rl_NFC{-1}*(lp0_NFC + lnc0_NFC)) );


    prof_prov := ( - (ap_HH - ap_HH{-1} + woff_HH) - (ap_MG - ap_MG{-1} + woff_MG) - (ap_NFC - ap_NFC{-1} + woff_NFC) );

    prof_val_ass := ( + l_HH{-1}*(j_HH - 1) + l_MG{-1}*(j_MG - 1) + l_NFC{-1}*(j_NFC - 1) );
    prof_int_liab := (-(rd_lcy{-1}*d0_lcy + rd_fcy{-1}*e/e{-1}*(d{-1} - d_lcy{-1})));
    prof_val_liab := (-((d{-1} - d_lcy{-1})*(e/e{-1} - 1)));
    prof_val := (( + l_HH{-1}*(j_HH - 1) + l_MG{-1}*(j_MG - 1) + l_NFC{-1}*(j_NFC - 1) ) + (-((d{-1} - d_lcy{-1})*(e/e{-1} - 1))));
    prof_int_ona := (rona{-1} * ona{-1});
    prof_other := c1_rbk_other * tna{-1};


!equations

    
    tna = l - af + ona;
    tna = d + bk;


    log(ona) = + c0_ona * log(&roc_ny*ona{-1}) + (1 - c0_ona) * log(ss_ona_to_tna * tna) + shock_ona !! ona = ss_ona_to_tna * tna;


    (rbk - shock_rbk) * bk{-1} = + ( + (rl_HH{-1}*(lp0_HH + lnc0_HH)) + (rl_MG{-1}*(lp0_MG + lnc0_MG)) + (rl_NFC{-1}*(lp0_NFC + lnc0_NFC)) ) + (rona{-1} * ona{-1}) + c1_rbk_other * tna{-1} + ( - (ap_HH - ap_HH{-1} + woff_HH) - (ap_MG - ap_MG{-1} + woff_MG) - (ap_NFC - ap_NFC{-1} + woff_NFC) ) + ( + l_HH{-1}*(j_HH - 1) + l_MG{-1}*(j_MG - 1) + l_NFC{-1}*(j_NFC - 1) ) + (-(rd_lcy{-1}*d0_lcy + rd_fcy{-1}*e/e{-1}*(d{-1} - d_lcy{-1}))) + (-((d{-1} - d_lcy{-1})*(e/e{-1} - 1))) ;

    
    log(bk) = log(bk{-1}) + log(&roc_ny) + log(1 + rbk - &rbk) - c1_bk*(car - car_tar) !! bg = car_tar * riskw * tna;


    bg = bg_to_bk * bk;


    bg_to_bk = + c0_bg_to_bk * bg_to_bk{-1} + (1 - c0_bg_to_bk) * ss_bg_to_bk + shock_bg_to_bk !! bg_to_bk = ss_bg_to_bk;


    car = bg / (riskw * tna);


    riskw = c0_riskw * riskw{-1} + (1 - c0_riskw) * ss_riskw + shock_riskw !! riskw = ss_riskw;


    car_tar = car_min + ss_car_exc;


    car_min = c0_car_min * car_min{-1} + (1 - c0_car_min) * ss_car_min + shock_car_min !! car_min = ss_car_min;


    "Capital adequacy stress surcharge"
    rx = glogc1(-(car - car_min), c1_rx, c2_rx, c3_rx, c4_rx, c5_rx);


!variables

    "Local currency non-equity liabilities" d_lcy
    "Local currency non-equity liabilities, opening after new information" d0_lcy


!equations

    d - d_lcy = + sigma_HH * l_HH + sigma_MG * l_MG + sigma_NFC * l_NFC + onfx*bk;

    d0_lcy = d_lcy{-1};

    onfx = ss_onfx + shock_onfx;


!postprocessor

    rbk_int_loans = ( + (rl_HH{-1}*(lp0_HH + lnc0_HH)) + (rl_MG{-1}*(lp0_MG + lnc0_MG)) + (rl_NFC{-1}*(lp0_NFC + lnc0_NFC)) ) / bk{-1};
    rbk_int_ona = (rona{-1} * ona{-1}) / bk{-1};
    rbk_prov = ( - (ap_HH - ap_HH{-1} + woff_HH) - (ap_MG - ap_MG{-1} + woff_MG) - (ap_NFC - ap_NFC{-1} + woff_NFC) ) / bk{-1};
    rbk_val_ass = ( + l_HH{-1}*(j_HH - 1) + l_MG{-1}*(j_MG - 1) + l_NFC{-1}*(j_NFC - 1) ) / bk{-1};
    rbk_int_liab = (-(rd_lcy{-1}*d0_lcy + rd_fcy{-1}*e/e{-1}*(d{-1} - d_lcy{-1}))) / bk{-1};
    rbk_val_liab = (-((d{-1} - d_lcy{-1})*(e/e{-1} - 1))) / bk{-1};
    rbk_other = c1_rbk_other * tna{-1} / bk{-1};

    roa = rbk * bk{-1}/tna{-1};

    roa_int_loans = ( + (rl_HH{-1}*(lp0_HH + lnc0_HH)) + (rl_MG{-1}*(lp0_MG + lnc0_MG)) + (rl_NFC{-1}*(lp0_NFC + lnc0_NFC)) ) / tna{-1};
    roa_int_ona = (rona{-1} * ona{-1}) / tna{-1};
    roa_prov = ( - (ap_HH - ap_HH{-1} + woff_HH) - (ap_MG - ap_MG{-1} + woff_MG) - (ap_NFC - ap_NFC{-1} + woff_NFC) ) / tna{-1};
    roa_val_ass = ( + l_HH{-1}*(j_HH - 1) + l_MG{-1}*(j_MG - 1) + l_NFC{-1}*(j_NFC - 1) ) / tna{-1};
    roa_int_liab = (-(rd_lcy{-1}*d0_lcy + rd_fcy{-1}*e/e{-1}*(d{-1} - d_lcy{-1}))) / tna{-1};
    roa_val_liab = (-((d{-1} - d_lcy{-1})*(e/e{-1} - 1))) / tna{-1};
    roa_other = c1_rbk_other * tna{-1} / tna{-1};


!variables

    "New loans" new_l
    "Loans to GDP ratio" l_to_4ny
    "Loans to GDP ratio trend" l_to_4ny_tnd
    "New loans to GDP ratio" new_l_to_ny
    "New loans to gross loans ratio" new_l_to_l


!log-variables !all-but

    l_to_4ny, l_to_4ny_tnd, new_l_to_ny, new_l_to_l


!shocks

    "Shocks to new loans" shock_new_l


!equations

    new_l = + new_l_HH + new_l_MG + new_l_NFC ;
    l_to_4ny = l / (4*ny);
    l_to_4ny_tnd = + l_to_4ny_tnd_HH + l_to_4ny_tnd_MG + l_to_4ny_tnd_NFC ;
    new_l_to_ny = new_l / ny;
    new_l_to_l = new_l / l;


    !variables

        "Transactions to be financed, HH" trn_HH
        "Average transactions to be financed, HH" trn_avg_HH
        "Inverse velocity of new loans, HH" ivy_HH
        "Inverse velocity of new loans trend, HH" ivy_tnd_HH
        "New loans, HH" new_l_HH
        "Loans to GDP ratio, HH" l_to_4ny_HH
        "New loans to GDP ratio, HH" new_l_to_ny_HH
        "New loans to stock loans ratio, HH" new_l_to_l_HH
        "Loans to GDP ratio trend, HH" l_to_4ny_tnd_HH


    !log-variables !all-but

        l_to_4ny_HH, new_l_to_l_HH, l_to_4ny_tnd_HH, ivy_tnd_HH, new_l_to_ny_HH


    !shocks 

        "Shock to inverse velocity of new loans, HH" shock_ivy_HH
        "Shock to new loans, HH" shock_new_l_HH
        "Shock to gross loans to GDP ratio trend, HH" shock_l_to_4ny_tnd_HH


    !parameters

        c0_ivy_tnd_HH
        "Transactions in assets relative to GDP" c1_trn_HH
        "S/S Gross loans to GDP ratio" ss_l_to_4ny_HH
        "Autoregression in inverse velocity of new loans, HH" c0_ivy_HH
        "Response in inverse velocity to loans to GDP ratio, HH" c1_ivy_HH
        "Response in inverse velocity to lending conditions, HH" c2_ivy_HH
        "Autoregression AR1 in gross loans to GDP ratio trend, HH" c0_l_to_4ny_tnd_HH
        "Autoregression AR2 in gross loans to GDP ratio trend, HH" c1_l_to_4ny_tnd_HH


    !equations


        "Macroeconomic transactions"
        trn_HH = + (1 - c1_trn_HH) * py * y + c1_trn_HH * py * pa 
        !! trn_HH = py * y;


        trn_avg_HH = ( + ny{-0}*&roc_ny^0 + ny{-1}*&roc_ny^1 + ny{-2}*&roc_ny^2 + ny{-3}*&roc_ny^3 + ny{-4}*&roc_ny^4 + ny{-5}*&roc_ny^5 + ny{-6}*&roc_ny^6 + ny{-7}*&roc_ny^7 ) / 8;


        "Inverse velocity of new loans, HH"
        ivy_HH = + ivy_tnd_HH - c1_ivy_HH * [ l_to_4ny_HH - l_to_4ny_tnd_HH ] - c2_ivy_HH * new_rl_full_spread_gap_HH + shock_ivy_HH !! l_to_4ny_HH = ss_l_to_4ny_HH;


        "New credit creation, HH"
        log(new_l_HH) = + log(ivy_HH * trn_avg_HH) + shock_new_l_HH + shock_new_l !! new_l_HH = ivy_HH * trn_HH;


        "Gross loans to GDP ratio trend, HH"
        l_to_4ny_tnd_HH = + c0_l_to_4ny_tnd_HH * l_to_4ny_tnd_HH{-1} - c1_l_to_4ny_tnd_HH * l_to_4ny_tnd_HH{-2} + (1 - c0_l_to_4ny_tnd_HH + c1_l_to_4ny_tnd_HH) * ss_l_to_4ny_HH + shock_l_to_4ny_tnd_HH !! l_to_4ny_tnd_HH = ss_l_to_4ny_HH;


        "Inverse velocity of new loans trend, HH"
        ivy_tnd_HH = + c0_ivy_tnd_HH * ivy_tnd_HH{-1} + (1 - c0_ivy_tnd_HH) * &ivy_tnd_HH !! ivy_tnd_HH = (4 * l_to_4ny_HH) * new_l_HH / l_HH;


        "Loans to GDP ratio, HH"
        l_to_4ny_HH = l_HH / (4*ny);

        "New loans to GDP ratio, HH"
        new_l_to_ny_HH = new_l_HH / ny;

        "New loans to stock loans ratio, HH"
        new_l_to_l_HH = new_l_HH / l_HH;


    !variables

        "Transactions to be financed, MG" trn_MG
        "Average transactions to be financed, MG" trn_avg_MG
        "Inverse velocity of new loans, MG" ivy_MG
        "Inverse velocity of new loans trend, MG" ivy_tnd_MG
        "New loans, MG" new_l_MG
        "Loans to GDP ratio, MG" l_to_4ny_MG
        "New loans to GDP ratio, MG" new_l_to_ny_MG
        "New loans to stock loans ratio, MG" new_l_to_l_MG
        "Loans to GDP ratio trend, MG" l_to_4ny_tnd_MG


    !log-variables !all-but

        l_to_4ny_MG, new_l_to_l_MG, l_to_4ny_tnd_MG, ivy_tnd_MG, new_l_to_ny_MG


    !shocks 

        "Shock to inverse velocity of new loans, MG" shock_ivy_MG
        "Shock to new loans, MG" shock_new_l_MG
        "Shock to gross loans to GDP ratio trend, MG" shock_l_to_4ny_tnd_MG


    !parameters

        c0_ivy_tnd_MG
        "Transactions in assets relative to GDP" c1_trn_MG
        "S/S Gross loans to GDP ratio" ss_l_to_4ny_MG
        "Autoregression in inverse velocity of new loans, MG" c0_ivy_MG
        "Response in inverse velocity to loans to GDP ratio, MG" c1_ivy_MG
        "Response in inverse velocity to lending conditions, MG" c2_ivy_MG
        "Autoregression AR1 in gross loans to GDP ratio trend, MG" c0_l_to_4ny_tnd_MG
        "Autoregression AR2 in gross loans to GDP ratio trend, MG" c1_l_to_4ny_tnd_MG


    !equations


        "Macroeconomic transactions"
        trn_MG = + (1 - c1_trn_MG) * py * y + c1_trn_MG * py * pa 
        !! trn_MG = py * y;


        trn_avg_MG = ( + ny{-0}*&roc_ny^0 + ny{-1}*&roc_ny^1 + ny{-2}*&roc_ny^2 + ny{-3}*&roc_ny^3 + ny{-4}*&roc_ny^4 + ny{-5}*&roc_ny^5 + ny{-6}*&roc_ny^6 + ny{-7}*&roc_ny^7 ) / 8;


        "Inverse velocity of new loans, MG"
        ivy_MG = + ivy_tnd_MG - c1_ivy_MG * [ l_to_4ny_MG - l_to_4ny_tnd_MG ] - c2_ivy_MG * new_rl_full_spread_gap_MG + shock_ivy_MG !! l_to_4ny_MG = ss_l_to_4ny_MG;


        "New credit creation, MG"
        log(new_l_MG) = + log(ivy_MG * trn_avg_MG) + shock_new_l_MG + shock_new_l !! new_l_MG = ivy_MG * trn_MG;


        "Gross loans to GDP ratio trend, MG"
        l_to_4ny_tnd_MG = + c0_l_to_4ny_tnd_MG * l_to_4ny_tnd_MG{-1} - c1_l_to_4ny_tnd_MG * l_to_4ny_tnd_MG{-2} + (1 - c0_l_to_4ny_tnd_MG + c1_l_to_4ny_tnd_MG) * ss_l_to_4ny_MG + shock_l_to_4ny_tnd_MG !! l_to_4ny_tnd_MG = ss_l_to_4ny_MG;


        "Inverse velocity of new loans trend, MG"
        ivy_tnd_MG = + c0_ivy_tnd_MG * ivy_tnd_MG{-1} + (1 - c0_ivy_tnd_MG) * &ivy_tnd_MG !! ivy_tnd_MG = (4 * l_to_4ny_MG) * new_l_MG / l_MG;


        "Loans to GDP ratio, MG"
        l_to_4ny_MG = l_MG / (4*ny);

        "New loans to GDP ratio, MG"
        new_l_to_ny_MG = new_l_MG / ny;

        "New loans to stock loans ratio, MG"
        new_l_to_l_MG = new_l_MG / l_MG;


    !variables

        "Transactions to be financed, NFC" trn_NFC
        "Average transactions to be financed, NFC" trn_avg_NFC
        "Inverse velocity of new loans, NFC" ivy_NFC
        "Inverse velocity of new loans trend, NFC" ivy_tnd_NFC
        "New loans, NFC" new_l_NFC
        "Loans to GDP ratio, NFC" l_to_4ny_NFC
        "New loans to GDP ratio, NFC" new_l_to_ny_NFC
        "New loans to stock loans ratio, NFC" new_l_to_l_NFC
        "Loans to GDP ratio trend, NFC" l_to_4ny_tnd_NFC


    !log-variables !all-but

        l_to_4ny_NFC, new_l_to_l_NFC, l_to_4ny_tnd_NFC, ivy_tnd_NFC, new_l_to_ny_NFC


    !shocks 

        "Shock to inverse velocity of new loans, NFC" shock_ivy_NFC
        "Shock to new loans, NFC" shock_new_l_NFC
        "Shock to gross loans to GDP ratio trend, NFC" shock_l_to_4ny_tnd_NFC


    !parameters

        c0_ivy_tnd_NFC
        "Transactions in assets relative to GDP" c1_trn_NFC
        "S/S Gross loans to GDP ratio" ss_l_to_4ny_NFC
        "Autoregression in inverse velocity of new loans, NFC" c0_ivy_NFC
        "Response in inverse velocity to loans to GDP ratio, NFC" c1_ivy_NFC
        "Response in inverse velocity to lending conditions, NFC" c2_ivy_NFC
        "Autoregression AR1 in gross loans to GDP ratio trend, NFC" c0_l_to_4ny_tnd_NFC
        "Autoregression AR2 in gross loans to GDP ratio trend, NFC" c1_l_to_4ny_tnd_NFC


    !equations


        "Macroeconomic transactions"
        trn_NFC = + (1 - c1_trn_NFC) * py * y + c1_trn_NFC * py * pa 
        !! trn_NFC = py * y;


        trn_avg_NFC = ( + ny{-0}*&roc_ny^0 + ny{-1}*&roc_ny^1 + ny{-2}*&roc_ny^2 + ny{-3}*&roc_ny^3 + ny{-4}*&roc_ny^4 + ny{-5}*&roc_ny^5 + ny{-6}*&roc_ny^6 + ny{-7}*&roc_ny^7 ) / 8;


        "Inverse velocity of new loans, NFC"
        ivy_NFC = + ivy_tnd_NFC - c1_ivy_NFC * [ l_to_4ny_NFC - l_to_4ny_tnd_NFC ] - c2_ivy_NFC * new_rl_full_spread_gap_NFC + shock_ivy_NFC !! l_to_4ny_NFC = ss_l_to_4ny_NFC;


        "New credit creation, NFC"
        log(new_l_NFC) = + log(ivy_NFC * trn_avg_NFC) + shock_new_l_NFC + shock_new_l !! new_l_NFC = ivy_NFC * trn_NFC;


        "Gross loans to GDP ratio trend, NFC"
        l_to_4ny_tnd_NFC = + c0_l_to_4ny_tnd_NFC * l_to_4ny_tnd_NFC{-1} - c1_l_to_4ny_tnd_NFC * l_to_4ny_tnd_NFC{-2} + (1 - c0_l_to_4ny_tnd_NFC + c1_l_to_4ny_tnd_NFC) * ss_l_to_4ny_NFC + shock_l_to_4ny_tnd_NFC !! l_to_4ny_tnd_NFC = ss_l_to_4ny_NFC;


        "Inverse velocity of new loans trend, NFC"
        ivy_tnd_NFC = + c0_ivy_tnd_NFC * ivy_tnd_NFC{-1} + (1 - c0_ivy_tnd_NFC) * &ivy_tnd_NFC !! ivy_tnd_NFC = (4 * l_to_4ny_NFC) * new_l_NFC / l_NFC;


        "Loans to GDP ratio, NFC"
        l_to_4ny_NFC = l_NFC / (4*ny);

        "New loans to GDP ratio, NFC"
        new_l_to_ny_NFC = new_l_NFC / ny;

        "New loans to stock loans ratio, NFC"
        new_l_to_l_NFC = new_l_NFC / l_NFC;


!variables

    "Average aggregate portfolio default rates" q


!log_variables !all-but
    q

!shocks

    "Shocks to Credit Events Impact, Total" shock_q


!equations

    "Average aggregate portfolio default rates"
    q = ( + q_HH * lp_HH + q_MG * lp_MG + q_NFC * lp_NFC ) / lp;


    !variables

        "Credit events, HH" q_HH
        "S/S Slope of credit risk function, HH" ss_slope_q_HH
        "Macro conditions index, HH" z_HH


    !log_variables !all-but

        q_HH, ss_slope_q_HH, z_HH


    !shocks

        "Shock to credit events, HH" shock_q_HH


    !parameters

        "S/S Portfolio default rate, HH" ss_q_HH

        "Credit risk function, Scale, HH" c2_q_HH
        "Credit risk function, Shape, HH" c3_q_HH
        "Credit risk function, Lower bound, HH" c4_q_HH
        "Credit risk function, Upper bound, HH" c5_q_HH

        "Composition of macroeconomic conditions index" c1_z_HH


    !equations

        "Portfolio default rate function, HH"
        q_HH = + glogc1(-z_HH, ss_q_HH, c2_q_HH, c3_q_HH, c4_q_HH, c5_q_HH) + shock_q_HH + shock_q !! q_HH = ss_q_HH;


        "S/S Slope of portfolio default rate function, HH"
        ss_slope_q_HH = &ss_slope_q_HH !! ss_slope_q_HH = glogd1(0, ss_q_HH, c2_q_HH, c3_q_HH, c4_q_HH, c5_q_HH);


        "Macro conditions index, HH"
        z_HH = + c1_z_HH * log(y_gap) - (1 - c1_z_HH) * [ l_HH/(4*py*fws_y) - l_to_4ny_tnd_HH ] !! z_HH = 0;


    !variables

        "Credit events, MG" q_MG
        "S/S Slope of credit risk function, MG" ss_slope_q_MG
        "Macro conditions index, MG" z_MG


    !log_variables !all-but

        q_MG, ss_slope_q_MG, z_MG


    !shocks

        "Shock to credit events, MG" shock_q_MG


    !parameters

        "S/S Portfolio default rate, MG" ss_q_MG

        "Credit risk function, Scale, MG" c2_q_MG
        "Credit risk function, Shape, MG" c3_q_MG
        "Credit risk function, Lower bound, MG" c4_q_MG
        "Credit risk function, Upper bound, MG" c5_q_MG

        "Composition of macroeconomic conditions index" c1_z_MG


    !equations

        "Portfolio default rate function, MG"
        q_MG = + glogc1(-z_MG, ss_q_MG, c2_q_MG, c3_q_MG, c4_q_MG, c5_q_MG) + shock_q_MG + shock_q !! q_MG = ss_q_MG;


        "S/S Slope of portfolio default rate function, MG"
        ss_slope_q_MG = &ss_slope_q_MG !! ss_slope_q_MG = glogd1(0, ss_q_MG, c2_q_MG, c3_q_MG, c4_q_MG, c5_q_MG);


        "Macro conditions index, MG"
        z_MG = + c1_z_MG * log(y_gap) - (1 - c1_z_MG) * [ l_MG/(4*py*fws_y) - l_to_4ny_tnd_MG ] !! z_MG = 0;


    !variables

        "Credit events, NFC" q_NFC
        "S/S Slope of credit risk function, NFC" ss_slope_q_NFC
        "Macro conditions index, NFC" z_NFC


    !log_variables !all-but

        q_NFC, ss_slope_q_NFC, z_NFC


    !shocks

        "Shock to credit events, NFC" shock_q_NFC


    !parameters

        "S/S Portfolio default rate, NFC" ss_q_NFC

        "Credit risk function, Scale, NFC" c2_q_NFC
        "Credit risk function, Shape, NFC" c3_q_NFC
        "Credit risk function, Lower bound, NFC" c4_q_NFC
        "Credit risk function, Upper bound, NFC" c5_q_NFC

        "Composition of macroeconomic conditions index" c1_z_NFC


    !equations

        "Portfolio default rate function, NFC"
        q_NFC = + glogc1(-z_NFC, ss_q_NFC, c2_q_NFC, c3_q_NFC, c4_q_NFC, c5_q_NFC) + shock_q_NFC + shock_q !! q_NFC = ss_q_NFC;


        "S/S Slope of portfolio default rate function, NFC"
        ss_slope_q_NFC = &ss_slope_q_NFC !! ss_slope_q_NFC = glogd1(0, ss_q_NFC, c2_q_NFC, c3_q_NFC, c4_q_NFC, c5_q_NFC);


        "Macro conditions index, NFC"
        z_NFC = + c1_z_NFC * log(y_gap) - (1 - c1_z_NFC) * [ l_NFC/(4*py*fws_y) - l_to_4ny_tnd_NFC ] !! z_NFC = 0;


!variables

    "Short-term funding liability rate, local currency" rp_lcy
    "Short-term funding liability rate, foreign currency" rp_fcy
    "Return on other net assets" rona
    "Effective lending spread gap" new_rl_full_spread_gap
    "Stock lending rate" rl
    rona_spread

!parameters
    ss_rona_spread
    
!log-variables !all_but

    rona, rp_lcy, rp_fcy
    new_rl_full_spread_gap
    rl


!shocks

    "Shock to return on other net assets" shock_rona
    "Shock to autonomous profit margins" shock_rl_apm
    shock_rona_spread


!equations

    "Short-term funding liability rate, local currency"
    rp_lcy = r !! rp_lcy = ((1 + ss_rr) * ss_roc_cpi - 1);


    "Short-term funding liability rate, foreign currency"
    rp_fcy = rw !! rp_fcy = ((1 + ss_rrw) * ss_roc_cpiw - 1);


    "Return on other net assets"
    rona = rp_lcy - rona_spread + shock_rona;
    
    rona_spread = ss_rona_spread + shock_rona_spread !! rona_spread = ss_rona_spread;

    "Effective lending conditions spread gap"
    new_rl_full_spread_gap = ( + new_rl_full_spread_gap_HH * &new_l_HH + new_rl_full_spread_gap_MG * &new_l_MG + new_rl_full_spread_gap_NFC * &new_l_NFC ) / &new_l !! new_rl_full_spread_gap = 0;


    "Stock lending rate"
    rl = ( + rl_HH * lp_HH + rl_MG * lp_MG + rl_NFC * lp_NFC ) / lp;


    !variables

        "Stock Lending Rate, HH" rl_HH
        "New Lending Rate w Partial Risk Adjustment, HH" new_rl_HH
        "New Lending Rate w Full Risk Adjustment, HH" new_rl_full_HH
        "Cost of short-term liability and expected credit loss" cost_sr_ecl_HH
        "Cost of bank capital adequayc" cost_bk_HH
        "Base rate for new lending rate, HH" rl_base_HH

        "Lending conditions spread" new_rl_full_spread_HH
        "Autonomous Profit Margin in Lending Rates, HH" rl_apm_HH
        "Lending conditions spread gap" new_rl_full_spread_gap_HH


    !log-variables !all-but

        rl_HH, new_rl_HH, new_rl_full_HH, cost_sr_ecl_HH, cost_bk_HH, rl_base_HH, rl_apm_HH
        new_rl_full_spread_HH, new_rl_full_spread_gap_HH


    !parameters

        "S/S Autonomous Profit Margin in Lending Rates, HH" ss_rl_apm_HH

        "Pass-through of actual rates to lending base rates" c1_rl_base_HH
        "Duration Parameter for Interest Rate Fix, HH" psi_rl_HH
        "Partial Risk Adjustment, HH" c1_new_rl_HH
        "Elasticity of Profit Margin to CAR" c_rl_apm_HH
        c0_rl_apm_HH


    !shocks

        "Shock to Stock Lending Rate, HH" shock_rl_HH
        "Shock to New Lending Rate, HH" shock_new_rl_HH
        "Shock to New Lending Rate, HH" shock_new_rl_full_HH
        "Shock to New Lending Rate, HH" shock_new_rl_full1_HH
        "Shock to New Lending Rate, HH" shock_new_rl_full2_HH
        shock_rl_apm_HH


    !equations


        "Stock-flow dynamics in lending rates, HH"
        rl_HH = + rl_HH{-1} + ([psi_rl_HH * (1 - theta_lp_HH) * lp0_HH + new_l_HH] / lp_HH) * (new_rl_HH - rl_HH{-1}) + shock_rl_HH !! rl_HH = new_rl_HH;


        "Base rate for lending rates, HH"
        rl_base_HH = + (1-new_sigma_HH) * (c1_rl_base_HH*rp_lcy + (1-c1_rl_base_HH)*&rp_lcy) + new_sigma_HH * (c1_rl_base_HH*rp_fcy + (1-c1_rl_base_HH)*&rp_fcy);


        "Autonomous profit margins in lending rates, HH"
        rl_apm_HH = c0_rl_apm_HH * rl_apm_HH{-1} + (1 - c0_rl_apm_HH) * ss_rl_apm_HH + shock_rl_apm_HH
        !! rl_apm_HH = ss_rl_apm_HH;


        "Cost of short-term liability and expected credit loss"
        (1 + cost_sr_ecl_HH) = + (1 - ((1 - psi_rl_HH)*(1 - theta_lp_HH))) * (1 + rl_base_HH)/(1 - lambda_HH*q_HH{+1}) + ((1 - psi_rl_HH)*(1 - theta_lp_HH)) * (1 + cost_sr_ecl_HH{+1}) + shock_new_rl_full1_HH !! 1 + cost_sr_ecl_HH = (1 + rl_base_HH) / (1 - lambda_HH*q_HH);


        "Cost of bank capital adequacy"
        (1 + cost_bk_HH) = + (1 - ((1 - psi_rl_HH)*(1 - theta_lp_HH))) * (1 + rx) + ((1 - psi_rl_HH)*(1 - theta_lp_HH)) * (1 + cost_bk_HH{+1}) + shock_new_rl_full2_HH !! cost_bk_HH = rx;


        "New lending rates with full risk adjustment, HH"
        (1 + new_rl_full_HH) = (1 + cost_sr_ecl_HH) * (1 + cost_bk_HH) * (1 + rl_apm_HH);


        "Actual new lending rates with partial risk, HH"
        new_rl_HH = + rl_base_HH + c1_new_rl_HH * (new_rl_full_HH - rl_base_HH) + (1 - c1_new_rl_HH) * (&new_rl_full_HH - &rl_base_HH) + shock_new_rl_HH !! new_rl_HH = new_rl_full_HH;


        "Effective lending conditions spread, HH"
        new_rl_full_spread_HH = new_rl_full_HH - rl_base_HH;


        "Effective lending conditions spread gap, HH"
        new_rl_full_spread_gap_HH = new_rl_full_spread_HH - &new_rl_full_spread_HH !! new_rl_full_spread_gap_HH = 0;


    !variables

        "Stock Lending Rate, MG" rl_MG
        "New Lending Rate w Partial Risk Adjustment, MG" new_rl_MG
        "New Lending Rate w Full Risk Adjustment, MG" new_rl_full_MG
        "Cost of short-term liability and expected credit loss" cost_sr_ecl_MG
        "Cost of bank capital adequayc" cost_bk_MG
        "Base rate for new lending rate, MG" rl_base_MG

        "Lending conditions spread" new_rl_full_spread_MG
        "Autonomous Profit Margin in Lending Rates, MG" rl_apm_MG
        "Lending conditions spread gap" new_rl_full_spread_gap_MG


    !log-variables !all-but

        rl_MG, new_rl_MG, new_rl_full_MG, cost_sr_ecl_MG, cost_bk_MG, rl_base_MG, rl_apm_MG
        new_rl_full_spread_MG, new_rl_full_spread_gap_MG


    !parameters

        "S/S Autonomous Profit Margin in Lending Rates, MG" ss_rl_apm_MG

        "Pass-through of actual rates to lending base rates" c1_rl_base_MG
        "Duration Parameter for Interest Rate Fix, MG" psi_rl_MG
        "Partial Risk Adjustment, MG" c1_new_rl_MG
        "Elasticity of Profit Margin to CAR" c_rl_apm_MG
        c0_rl_apm_MG


    !shocks

        "Shock to Stock Lending Rate, MG" shock_rl_MG
        "Shock to New Lending Rate, MG" shock_new_rl_MG
        "Shock to New Lending Rate, MG" shock_new_rl_full_MG
        "Shock to New Lending Rate, MG" shock_new_rl_full1_MG
        "Shock to New Lending Rate, MG" shock_new_rl_full2_MG
        shock_rl_apm_MG


    !equations


        "Stock-flow dynamics in lending rates, MG"
        rl_MG = + rl_MG{-1} + ([psi_rl_MG * (1 - theta_lp_MG) * lp0_MG + new_l_MG] / lp_MG) * (new_rl_MG - rl_MG{-1}) + shock_rl_MG !! rl_MG = new_rl_MG;


        "Base rate for lending rates, MG"
        rl_base_MG = + (1-new_sigma_MG) * (c1_rl_base_MG*rp_lcy + (1-c1_rl_base_MG)*&rp_lcy) + new_sigma_MG * (c1_rl_base_MG*rp_fcy + (1-c1_rl_base_MG)*&rp_fcy);


        "Autonomous profit margins in lending rates, MG"
        rl_apm_MG = c0_rl_apm_MG * rl_apm_MG{-1} + (1 - c0_rl_apm_MG) * ss_rl_apm_MG + shock_rl_apm_MG
        !! rl_apm_MG = ss_rl_apm_MG;


        "Cost of short-term liability and expected credit loss"
        (1 + cost_sr_ecl_MG) = + (1 - ((1 - psi_rl_MG)*(1 - theta_lp_MG))) * (1 + rl_base_MG)/(1 - lambda_MG*q_MG{+1}) + ((1 - psi_rl_MG)*(1 - theta_lp_MG)) * (1 + cost_sr_ecl_MG{+1}) + shock_new_rl_full1_MG !! 1 + cost_sr_ecl_MG = (1 + rl_base_MG) / (1 - lambda_MG*q_MG);


        "Cost of bank capital adequacy"
        (1 + cost_bk_MG) = + (1 - ((1 - psi_rl_MG)*(1 - theta_lp_MG))) * (1 + rx) + ((1 - psi_rl_MG)*(1 - theta_lp_MG)) * (1 + cost_bk_MG{+1}) + shock_new_rl_full2_MG !! cost_bk_MG = rx;


        "New lending rates with full risk adjustment, MG"
        (1 + new_rl_full_MG) = (1 + cost_sr_ecl_MG) * (1 + cost_bk_MG) * (1 + rl_apm_MG);


        "Actual new lending rates with partial risk, MG"
        new_rl_MG = + rl_base_MG + c1_new_rl_MG * (new_rl_full_MG - rl_base_MG) + (1 - c1_new_rl_MG) * (&new_rl_full_MG - &rl_base_MG) + shock_new_rl_MG !! new_rl_MG = new_rl_full_MG;


        "Effective lending conditions spread, MG"
        new_rl_full_spread_MG = new_rl_full_MG - rl_base_MG;


        "Effective lending conditions spread gap, MG"
        new_rl_full_spread_gap_MG = new_rl_full_spread_MG - &new_rl_full_spread_MG !! new_rl_full_spread_gap_MG = 0;


    !variables

        "Stock Lending Rate, NFC" rl_NFC
        "New Lending Rate w Partial Risk Adjustment, NFC" new_rl_NFC
        "New Lending Rate w Full Risk Adjustment, NFC" new_rl_full_NFC
        "Cost of short-term liability and expected credit loss" cost_sr_ecl_NFC
        "Cost of bank capital adequayc" cost_bk_NFC
        "Base rate for new lending rate, NFC" rl_base_NFC

        "Lending conditions spread" new_rl_full_spread_NFC
        "Autonomous Profit Margin in Lending Rates, NFC" rl_apm_NFC
        "Lending conditions spread gap" new_rl_full_spread_gap_NFC


    !log-variables !all-but

        rl_NFC, new_rl_NFC, new_rl_full_NFC, cost_sr_ecl_NFC, cost_bk_NFC, rl_base_NFC, rl_apm_NFC
        new_rl_full_spread_NFC, new_rl_full_spread_gap_NFC


    !parameters

        "S/S Autonomous Profit Margin in Lending Rates, NFC" ss_rl_apm_NFC

        "Pass-through of actual rates to lending base rates" c1_rl_base_NFC
        "Duration Parameter for Interest Rate Fix, NFC" psi_rl_NFC
        "Partial Risk Adjustment, NFC" c1_new_rl_NFC
        "Elasticity of Profit Margin to CAR" c_rl_apm_NFC
        c0_rl_apm_NFC


    !shocks

        "Shock to Stock Lending Rate, NFC" shock_rl_NFC
        "Shock to New Lending Rate, NFC" shock_new_rl_NFC
        "Shock to New Lending Rate, NFC" shock_new_rl_full_NFC
        "Shock to New Lending Rate, NFC" shock_new_rl_full1_NFC
        "Shock to New Lending Rate, NFC" shock_new_rl_full2_NFC
        shock_rl_apm_NFC


    !equations


        "Stock-flow dynamics in lending rates, NFC"
        rl_NFC = + rl_NFC{-1} + ([psi_rl_NFC * (1 - theta_lp_NFC) * lp0_NFC + new_l_NFC] / lp_NFC) * (new_rl_NFC - rl_NFC{-1}) + shock_rl_NFC !! rl_NFC = new_rl_NFC;


        "Base rate for lending rates, NFC"
        rl_base_NFC = + (1-new_sigma_NFC) * (c1_rl_base_NFC*rp_lcy + (1-c1_rl_base_NFC)*&rp_lcy) + new_sigma_NFC * (c1_rl_base_NFC*rp_fcy + (1-c1_rl_base_NFC)*&rp_fcy);


        "Autonomous profit margins in lending rates, NFC"
        rl_apm_NFC = c0_rl_apm_NFC * rl_apm_NFC{-1} + (1 - c0_rl_apm_NFC) * ss_rl_apm_NFC + shock_rl_apm_NFC
        !! rl_apm_NFC = ss_rl_apm_NFC;


        "Cost of short-term liability and expected credit loss"
        (1 + cost_sr_ecl_NFC) = + (1 - ((1 - psi_rl_NFC)*(1 - theta_lp_NFC))) * (1 + rl_base_NFC)/(1 - lambda_NFC*q_NFC{+1}) + ((1 - psi_rl_NFC)*(1 - theta_lp_NFC)) * (1 + cost_sr_ecl_NFC{+1}) + shock_new_rl_full1_NFC !! 1 + cost_sr_ecl_NFC = (1 + rl_base_NFC) / (1 - lambda_NFC*q_NFC);


        "Cost of bank capital adequacy"
        (1 + cost_bk_NFC) = + (1 - ((1 - psi_rl_NFC)*(1 - theta_lp_NFC))) * (1 + rx) + ((1 - psi_rl_NFC)*(1 - theta_lp_NFC)) * (1 + cost_bk_NFC{+1}) + shock_new_rl_full2_NFC !! cost_bk_NFC = rx;


        "New lending rates with full risk adjustment, NFC"
        (1 + new_rl_full_NFC) = (1 + cost_sr_ecl_NFC) * (1 + cost_bk_NFC) * (1 + rl_apm_NFC);


        "Actual new lending rates with partial risk, NFC"
        new_rl_NFC = + rl_base_NFC + c1_new_rl_NFC * (new_rl_full_NFC - rl_base_NFC) + (1 - c1_new_rl_NFC) * (&new_rl_full_NFC - &rl_base_NFC) + shock_new_rl_NFC !! new_rl_NFC = new_rl_full_NFC;


        "Effective lending conditions spread, NFC"
        new_rl_full_spread_NFC = new_rl_full_NFC - rl_base_NFC;


        "Effective lending conditions spread gap, NFC"
        new_rl_full_spread_gap_NFC = new_rl_full_spread_NFC - &new_rl_full_spread_NFC !! new_rl_full_spread_gap_NFC = 0;


    !variables
        "New funding rates, <lcy>" new_rd_lcy
        "Stock funding rates, <lcy>" rd_lcy


    !log-variables !all_but
        rd_lcy, new_rd_lcy


    !parameters

        "Duration parameter for local currency funding rate, lcy" psi_rd_lcy
        "S/S Autonomous profit margin in funding rates, lcy" ss_rd_apm_lcy


    !shocks

        "Shock to stock funding rate, lcy" shock_rd_lcy
        "Shock to new funding rate, lcy" shock_new_rd_lcy


    !equations

        "Stock funding rates, lcy"
        rd_lcy = + (1 - psi_rd_lcy) * rd_lcy{-1} + psi_rd_lcy * new_rd_lcy + shock_rd_lcy !! rd_lcy = new_rd_lcy ;

        "New funding rates, lcy"
        new_rd_lcy = + rp_lcy + ss_rd_apm_lcy + shock_new_rd_lcy !! new_rd_lcy = rp_lcy + ss_rd_apm_lcy ;


    !variables
        "New funding rates, <fcy>" new_rd_fcy
        "Stock funding rates, <fcy>" rd_fcy


    !log-variables !all_but
        rd_fcy, new_rd_fcy


    !parameters

        "Duration parameter for local currency funding rate, fcy" psi_rd_fcy
        "S/S Autonomous profit margin in funding rates, fcy" ss_rd_apm_fcy


    !shocks

        "Shock to stock funding rate, fcy" shock_rd_fcy
        "Shock to new funding rate, fcy" shock_new_rd_fcy


    !equations

        "Stock funding rates, fcy"
        rd_fcy = + (1 - psi_rd_fcy) * rd_fcy{-1} + psi_rd_fcy * new_rd_fcy + shock_rd_fcy !! rd_fcy = new_rd_fcy ;

        "New funding rates, fcy"
        new_rd_fcy = + rp_fcy + ss_rd_apm_fcy + shock_new_rd_fcy !! new_rd_fcy = rp_fcy + ss_rd_apm_fcy ;


!variables

    "Gross loans" l
    "Gross loans, Opening after new info" l0
    "Nonperforming loans, Opening after new info" ln0
    "Nonperforming loans recognized, Opening after new info" ln0_rec
    "Nonperforming loans" ln
    "Nonperforming loans recognized" ln_rec
    "Performing loans" lp
    "Performing loans recognized" lp_rec
    "Write-offs" woff
    "Nonperforming loans to gross loans ratio" ln_to_l
    "Nonperforming loans recognized to gross loans ratio" ln_rec_to_l


!log-variables !all-but

    ln_to_l, ln_rec_to_l


!equations

    l = + l_HH + l_MG + l_NFC ;
    l0 = + l0_HH + l0_MG + l0_NFC ;
    ln = + ln_HH + ln_MG + ln_NFC ;
    ln0 = + ln0_HH + ln0_MG + ln0_NFC ;
    lp = + lp_HH + lp_MG + lp_NFC ;
    lp_rec = + lp_rec_HH + lp_rec_MG + lp_rec_NFC ;
    ln_rec = + ln_rec_HH + ln_rec_MG + ln_rec_NFC ;
    ln0_rec = + ln0_rec_HH + ln0_rec_MG + ln0_rec_NFC ;
    woff = + woff_HH + woff_MG + woff_NFC ;
    ln_to_l = ln / l;
    ln_rec_to_l = ln_rec / l;


    !variables
        "Gross loans, HH" l_HH
        "Gross loans, Opening after new info, HH" l0_HH
        "Performing loans, HH" lp_HH
        "Performing loans, Opening after new information, HH" lp0_HH
        "Performing loans recognized, Opening after new info, HH" lp0_rec_HH
        "Performing loans recognized, HH" lp_rec_HH
        "Inflow of newly nonperforming loans" new_ln_HH
        "Inflow of newly nonperforming loans, Recovery buffer" new_lnc_HH
        "Inflow of newly nonperforming loans, Write-off buffer" new_lnw_HH
        "Nonperforming loans, HH" ln_HH
        "Nonperforming loans recognized, HH" ln_rec_HH
        "Nonperforming loans recognized to nonperforming loans ratio, HH" ln_to_ln_rec_HH
        "Nonperforming loans, Opening after new info, HH" ln0_HH
        "Nonperforming loans recognized, Opening after new info, HH" ln0_rec_HH
        "Nonperforming loans, Recovery Buffer, HH" lnc_HH
        "Nonperforming loans, Recovery Buffer, Opening after new information, HH" lnc0_HH
        "Nonperforming loans, Write-off buffer, HH" lnw_HH
        "Nonperforming loans, Write-off buffer, Opening after new information, HH" lnw0_HH
        "Recovery buffer to nonperforming loans ratio, HH" lnc_to_ln_HH
        "Write-offs, HH" woff_HH
        "Nonperforming loans to gross loans ratio, HH" ln_to_l_HH
        "Nonperforming loans recognized to gross loans ratio, HH" ln_rec_to_l_HH
        "Exchange Rate Valuation, HH" j_HH
        "Exchange rate exposure switch, HH" sigma_HH

    !log-variables !all-but

        ln_to_l_HH, ln_rec_to_l_HH, lnc_to_ln_HH, ln_to_ln_rec_HH, sigma_HH


    !parameters

        "Paydown factor, HH" theta_lp_HH
        "Recovery factor, HH" theta_ln_HH
        "Loss given nonperformance, HH" lambda_HH
        "Write-off rate, HH" omega_HH
        "Autoregression in Exchange rate exposure switch, HH" c0_sigma_HH
        "S/S Exchange rate exposure switch, HH" ss_sigma_HH
        "Exchange rate exposure switch for new loans, HH" new_sigma_HH
        
    !shocks
    
        "Shock to Exchange rate exposure switch, HH" shock_sigma_HH
        "Shock to write-off(Privat effect), HH" shock_woff_HH

    !equations

        "Gross loans, HH"
        l_HH = lp_HH + ln_HH;

        "Gross loans, Opening after new info, HH"
        l0_HH = lp0_HH + ln0_HH;


        "Performing loans, Opening after new information, HH"
        lp0_HH = j_HH * lp_HH{-1} - new_ln_HH;

        "Performing loans, Closing, HH"
        lp_HH = (1 - theta_lp_HH)*lp0_HH + new_l_HH;


        "Inflow of newly nonperforming loans"
        new_ln_HH = j_HH * q_HH * lp_HH{-1};
        new_lnc_HH = (1 - lambda_HH) * new_ln_HH;
        new_lnw_HH = lambda_HH * new_ln_HH;

        "Nonperforming loans, HH"
        ln_HH = lnc_HH + lnw_HH;

        "Nonperforming loans, Opening after new info, HH"
        ln0_HH = lnc0_HH + lnw0_HH;

        "Nonperforming loans, Recovery buffer, Opening after new information, HH"
        lnc0_HH = j_HH * lnc_HH{-1} + new_lnc_HH;

        "Nonperforming loans, Recovery Buffer, Closing, HH"
        lnc_HH = (1 - theta_ln_HH) * lnc0_HH;

        "Nonperforming loans, Write-off buffer, Opening after new information, HH"
        lnw0_HH = j_HH * lnw_HH{-1} + new_lnw_HH;

        "Nonperforming loans, Write-off buffer, Closing, HH"
        lnw_HH = lnw0_HH - woff_HH;

        "Write-offs"
        woff_HH = (omega_HH * (lnw0_HH - new_lnw_HH)) * (1+ shock_woff_HH);


        "Performing loans recognized, Opening after new info, HH"
        lp0_rec_HH = lp0_HH + new_ln_HH;

        "Performing loans recognized, Closing, HH"
        lp_rec_HH = lp_HH + new_ln_HH;

        "Nonperforming loans recognized, Opening after new info, HH"
        ln0_rec_HH = l0_HH - lp0_rec_HH;

        "Nonperforming loans recognized, Closing, HH"
        ln_rec_HH = l_HH - lp_rec_HH;

        "Nonperforming loans to nonperforming loans recognized ratio, HH"
        ln_to_ln_rec_HH = ln_HH / ln_rec_HH;


        "Exchange rate valuation, HH"
        j_HH = 1 + sigma_HH * (roc_e - 1);
        
        sigma_HH = c0_sigma_HH * sigma_HH{-1} + (1-c0_sigma_HH) * ss_sigma_HH + shock_sigma_HH
        !! sigma_HH = ss_sigma_HH;


        "Nonperforming loans to gross loans ratio, HH"
        ln_to_l_HH = ln_HH / l_HH;

        "Nonperforming loans recognized to gross loans ratio, HH"
        ln_rec_to_l_HH = ln_rec_HH / l_HH;

        "Recovery buffer to nonperforming loans ratio, HH"
        lnc_to_ln_HH = lnc_HH / ln_HH;


    !variables
        "Gross loans, MG" l_MG
        "Gross loans, Opening after new info, MG" l0_MG
        "Performing loans, MG" lp_MG
        "Performing loans, Opening after new information, MG" lp0_MG
        "Performing loans recognized, Opening after new info, MG" lp0_rec_MG
        "Performing loans recognized, MG" lp_rec_MG
        "Inflow of newly nonperforming loans" new_ln_MG
        "Inflow of newly nonperforming loans, Recovery buffer" new_lnc_MG
        "Inflow of newly nonperforming loans, Write-off buffer" new_lnw_MG
        "Nonperforming loans, MG" ln_MG
        "Nonperforming loans recognized, MG" ln_rec_MG
        "Nonperforming loans recognized to nonperforming loans ratio, MG" ln_to_ln_rec_MG
        "Nonperforming loans, Opening after new info, MG" ln0_MG
        "Nonperforming loans recognized, Opening after new info, MG" ln0_rec_MG
        "Nonperforming loans, Recovery Buffer, MG" lnc_MG
        "Nonperforming loans, Recovery Buffer, Opening after new information, MG" lnc0_MG
        "Nonperforming loans, Write-off buffer, MG" lnw_MG
        "Nonperforming loans, Write-off buffer, Opening after new information, MG" lnw0_MG
        "Recovery buffer to nonperforming loans ratio, MG" lnc_to_ln_MG
        "Write-offs, MG" woff_MG
        "Nonperforming loans to gross loans ratio, MG" ln_to_l_MG
        "Nonperforming loans recognized to gross loans ratio, MG" ln_rec_to_l_MG
        "Exchange Rate Valuation, MG" j_MG
        "Exchange rate exposure switch, MG" sigma_MG

    !log-variables !all-but

        ln_to_l_MG, ln_rec_to_l_MG, lnc_to_ln_MG, ln_to_ln_rec_MG, sigma_MG


    !parameters

        "Paydown factor, MG" theta_lp_MG
        "Recovery factor, MG" theta_ln_MG
        "Loss given nonperformance, MG" lambda_MG
        "Write-off rate, MG" omega_MG
        "Autoregression in Exchange rate exposure switch, MG" c0_sigma_MG
        "S/S Exchange rate exposure switch, MG" ss_sigma_MG
        "Exchange rate exposure switch for new loans, MG" new_sigma_MG
        
    !shocks
    
        "Shock to Exchange rate exposure switch, MG" shock_sigma_MG
        "Shock to write-off(Privat effect), MG" shock_woff_MG

    !equations

        "Gross loans, MG"
        l_MG = lp_MG + ln_MG;

        "Gross loans, Opening after new info, MG"
        l0_MG = lp0_MG + ln0_MG;


        "Performing loans, Opening after new information, MG"
        lp0_MG = j_MG * lp_MG{-1} - new_ln_MG;

        "Performing loans, Closing, MG"
        lp_MG = (1 - theta_lp_MG)*lp0_MG + new_l_MG;


        "Inflow of newly nonperforming loans"
        new_ln_MG = j_MG * q_MG * lp_MG{-1};
        new_lnc_MG = (1 - lambda_MG) * new_ln_MG;
        new_lnw_MG = lambda_MG * new_ln_MG;

        "Nonperforming loans, MG"
        ln_MG = lnc_MG + lnw_MG;

        "Nonperforming loans, Opening after new info, MG"
        ln0_MG = lnc0_MG + lnw0_MG;

        "Nonperforming loans, Recovery buffer, Opening after new information, MG"
        lnc0_MG = j_MG * lnc_MG{-1} + new_lnc_MG;

        "Nonperforming loans, Recovery Buffer, Closing, MG"
        lnc_MG = (1 - theta_ln_MG) * lnc0_MG;

        "Nonperforming loans, Write-off buffer, Opening after new information, MG"
        lnw0_MG = j_MG * lnw_MG{-1} + new_lnw_MG;

        "Nonperforming loans, Write-off buffer, Closing, MG"
        lnw_MG = lnw0_MG - woff_MG;

        "Write-offs"
        woff_MG = (omega_MG * (lnw0_MG - new_lnw_MG)) * (1+ shock_woff_MG);


        "Performing loans recognized, Opening after new info, MG"
        lp0_rec_MG = lp0_MG + new_ln_MG;

        "Performing loans recognized, Closing, MG"
        lp_rec_MG = lp_MG + new_ln_MG;

        "Nonperforming loans recognized, Opening after new info, MG"
        ln0_rec_MG = l0_MG - lp0_rec_MG;

        "Nonperforming loans recognized, Closing, MG"
        ln_rec_MG = l_MG - lp_rec_MG;

        "Nonperforming loans to nonperforming loans recognized ratio, MG"
        ln_to_ln_rec_MG = ln_MG / ln_rec_MG;


        "Exchange rate valuation, MG"
        j_MG = 1 + sigma_MG * (roc_e - 1);
        
        sigma_MG = c0_sigma_MG * sigma_MG{-1} + (1-c0_sigma_MG) * ss_sigma_MG + shock_sigma_MG
        !! sigma_MG = ss_sigma_MG;


        "Nonperforming loans to gross loans ratio, MG"
        ln_to_l_MG = ln_MG / l_MG;

        "Nonperforming loans recognized to gross loans ratio, MG"
        ln_rec_to_l_MG = ln_rec_MG / l_MG;

        "Recovery buffer to nonperforming loans ratio, MG"
        lnc_to_ln_MG = lnc_MG / ln_MG;


    !variables
        "Gross loans, NFC" l_NFC
        "Gross loans, Opening after new info, NFC" l0_NFC
        "Performing loans, NFC" lp_NFC
        "Performing loans, Opening after new information, NFC" lp0_NFC
        "Performing loans recognized, Opening after new info, NFC" lp0_rec_NFC
        "Performing loans recognized, NFC" lp_rec_NFC
        "Inflow of newly nonperforming loans" new_ln_NFC
        "Inflow of newly nonperforming loans, Recovery buffer" new_lnc_NFC
        "Inflow of newly nonperforming loans, Write-off buffer" new_lnw_NFC
        "Nonperforming loans, NFC" ln_NFC
        "Nonperforming loans recognized, NFC" ln_rec_NFC
        "Nonperforming loans recognized to nonperforming loans ratio, NFC" ln_to_ln_rec_NFC
        "Nonperforming loans, Opening after new info, NFC" ln0_NFC
        "Nonperforming loans recognized, Opening after new info, NFC" ln0_rec_NFC
        "Nonperforming loans, Recovery Buffer, NFC" lnc_NFC
        "Nonperforming loans, Recovery Buffer, Opening after new information, NFC" lnc0_NFC
        "Nonperforming loans, Write-off buffer, NFC" lnw_NFC
        "Nonperforming loans, Write-off buffer, Opening after new information, NFC" lnw0_NFC
        "Recovery buffer to nonperforming loans ratio, NFC" lnc_to_ln_NFC
        "Write-offs, NFC" woff_NFC
        "Nonperforming loans to gross loans ratio, NFC" ln_to_l_NFC
        "Nonperforming loans recognized to gross loans ratio, NFC" ln_rec_to_l_NFC
        "Exchange Rate Valuation, NFC" j_NFC
        "Exchange rate exposure switch, NFC" sigma_NFC

    !log-variables !all-but

        ln_to_l_NFC, ln_rec_to_l_NFC, lnc_to_ln_NFC, ln_to_ln_rec_NFC, sigma_NFC


    !parameters

        "Paydown factor, NFC" theta_lp_NFC
        "Recovery factor, NFC" theta_ln_NFC
        "Loss given nonperformance, NFC" lambda_NFC
        "Write-off rate, NFC" omega_NFC
        "Autoregression in Exchange rate exposure switch, NFC" c0_sigma_NFC
        "S/S Exchange rate exposure switch, NFC" ss_sigma_NFC
        "Exchange rate exposure switch for new loans, NFC" new_sigma_NFC
        
    !shocks
    
        "Shock to Exchange rate exposure switch, NFC" shock_sigma_NFC
        "Shock to write-off(Privat effect), NFC" shock_woff_NFC

    !equations

        "Gross loans, NFC"
        l_NFC = lp_NFC + ln_NFC;

        "Gross loans, Opening after new info, NFC"
        l0_NFC = lp0_NFC + ln0_NFC;


        "Performing loans, Opening after new information, NFC"
        lp0_NFC = j_NFC * lp_NFC{-1} - new_ln_NFC;

        "Performing loans, Closing, NFC"
        lp_NFC = (1 - theta_lp_NFC)*lp0_NFC + new_l_NFC;


        "Inflow of newly nonperforming loans"
        new_ln_NFC = j_NFC * q_NFC * lp_NFC{-1};
        new_lnc_NFC = (1 - lambda_NFC) * new_ln_NFC;
        new_lnw_NFC = lambda_NFC * new_ln_NFC;

        "Nonperforming loans, NFC"
        ln_NFC = lnc_NFC + lnw_NFC;

        "Nonperforming loans, Opening after new info, NFC"
        ln0_NFC = lnc0_NFC + lnw0_NFC;

        "Nonperforming loans, Recovery buffer, Opening after new information, NFC"
        lnc0_NFC = j_NFC * lnc_NFC{-1} + new_lnc_NFC;

        "Nonperforming loans, Recovery Buffer, Closing, NFC"
        lnc_NFC = (1 - theta_ln_NFC) * lnc0_NFC;

        "Nonperforming loans, Write-off buffer, Opening after new information, NFC"
        lnw0_NFC = j_NFC * lnw_NFC{-1} + new_lnw_NFC;

        "Nonperforming loans, Write-off buffer, Closing, NFC"
        lnw_NFC = lnw0_NFC - woff_NFC;

        "Write-offs"
        woff_NFC = (omega_NFC * (lnw0_NFC - new_lnw_NFC)) * (1+ shock_woff_NFC);


        "Performing loans recognized, Opening after new info, NFC"
        lp0_rec_NFC = lp0_NFC + new_ln_NFC;

        "Performing loans recognized, Closing, NFC"
        lp_rec_NFC = lp_NFC + new_ln_NFC;

        "Nonperforming loans recognized, Opening after new info, NFC"
        ln0_rec_NFC = l0_NFC - lp0_rec_NFC;

        "Nonperforming loans recognized, Closing, NFC"
        ln_rec_NFC = l_NFC - lp_rec_NFC;

        "Nonperforming loans to nonperforming loans recognized ratio, NFC"
        ln_to_ln_rec_NFC = ln_NFC / ln_rec_NFC;


        "Exchange rate valuation, NFC"
        j_NFC = 1 + sigma_NFC * (roc_e - 1);
        
        sigma_NFC = c0_sigma_NFC * sigma_NFC{-1} + (1-c0_sigma_NFC) * ss_sigma_NFC + shock_sigma_NFC
        !! sigma_NFC = ss_sigma_NFC;


        "Nonperforming loans to gross loans ratio, NFC"
        ln_to_l_NFC = ln_NFC / l_NFC;

        "Nonperforming loans recognized to gross loans ratio, NFC"
        ln_rec_to_l_NFC = ln_rec_NFC / l_NFC;

        "Recovery buffer to nonperforming loans ratio, NFC"
        lnc_to_ln_NFC = lnc_NFC / ln_NFC;


!variables

    "Prudential provisions" ap
    ap_to_l


!log-variables !all-but

    ap_to_l


!equations

    ap = + ap_HH + ap_MG + ap_NFC ;
    ap_to_l = ap / l;


    !variables
        "Prudential provisions, HH" ap_HH
        "Prudential provisions for performing loans, HH" ap_lp_HH
        "Prudential provisions for nonperforming loans, HH" ap_ln_HH
        "Fixed (legacy) effect in prudential provisions as a fraction of provisions, HH" ap_fe_HH
        ap_to_l_HH


    !log-variables !all-but

        ap_fe_HH, ap_to_l_HH


    !parameters

        "PD for performing loans, HH" pd_lp_HH
        "PD for nonperforming loans, HH" pd_ln_HH
        "LGD for performing loans, HH" lgd_lp_HH
        "LGD for nonperforming loans, HH" lgd_ln_HH
        "PD*LGD for perfomring loans, HH" gamma_lp_HH
        "PD*LGD for nonperfomring loans, HH" gamma_ln_HH
        "Autoregression in fixed (legacy) effect in prudential provisions, HH" c0_ap_fe_HH


    !shocks

        "Shock to fixed (legacy) effect in prudential provisions, HH" shock_ap_fe_HH


    !links

        gamma_lp_HH := pd_lp_HH * lgd_lp_HH;
        gamma_ln_HH := pd_ln_HH * lgd_ln_HH;


    !equations

        ap_HH = ap_lp_HH + ap_ln_HH + ap_HH * ap_fe_HH;

        ap_ln_HH = gamma_ln_HH * ln_HH;

        ap_lp_HH = gamma_lp_HH * lp_HH;

        ap_fe_HH = + c0_ap_fe_HH * ap_fe_HH{-1} + shock_ap_fe_HH;

        ap_to_l_HH = ap_HH / l_HH;


    !variables
        "Prudential provisions, MG" ap_MG
        "Prudential provisions for performing loans, MG" ap_lp_MG
        "Prudential provisions for nonperforming loans, MG" ap_ln_MG
        "Fixed (legacy) effect in prudential provisions as a fraction of provisions, MG" ap_fe_MG
        ap_to_l_MG


    !log-variables !all-but

        ap_fe_MG, ap_to_l_MG


    !parameters

        "PD for performing loans, MG" pd_lp_MG
        "PD for nonperforming loans, MG" pd_ln_MG
        "LGD for performing loans, MG" lgd_lp_MG
        "LGD for nonperforming loans, MG" lgd_ln_MG
        "PD*LGD for perfomring loans, MG" gamma_lp_MG
        "PD*LGD for nonperfomring loans, MG" gamma_ln_MG
        "Autoregression in fixed (legacy) effect in prudential provisions, MG" c0_ap_fe_MG


    !shocks

        "Shock to fixed (legacy) effect in prudential provisions, MG" shock_ap_fe_MG


    !links

        gamma_lp_MG := pd_lp_MG * lgd_lp_MG;
        gamma_ln_MG := pd_ln_MG * lgd_ln_MG;


    !equations

        ap_MG = ap_lp_MG + ap_ln_MG + ap_MG * ap_fe_MG;

        ap_ln_MG = gamma_ln_MG * ln_MG;

        ap_lp_MG = gamma_lp_MG * lp_MG;

        ap_fe_MG = + c0_ap_fe_MG * ap_fe_MG{-1} + shock_ap_fe_MG;

        ap_to_l_MG = ap_MG / l_MG;


    !variables
        "Prudential provisions, NFC" ap_NFC
        "Prudential provisions for performing loans, NFC" ap_lp_NFC
        "Prudential provisions for nonperforming loans, NFC" ap_ln_NFC
        "Fixed (legacy) effect in prudential provisions as a fraction of provisions, NFC" ap_fe_NFC
        ap_to_l_NFC


    !log-variables !all-but

        ap_fe_NFC, ap_to_l_NFC


    !parameters

        "PD for performing loans, NFC" pd_lp_NFC
        "PD for nonperforming loans, NFC" pd_ln_NFC
        "LGD for performing loans, NFC" lgd_lp_NFC
        "LGD for nonperforming loans, NFC" lgd_ln_NFC
        "PD*LGD for perfomring loans, NFC" gamma_lp_NFC
        "PD*LGD for nonperfomring loans, NFC" gamma_ln_NFC
        "Autoregression in fixed (legacy) effect in prudential provisions, NFC" c0_ap_fe_NFC


    !shocks

        "Shock to fixed (legacy) effect in prudential provisions, NFC" shock_ap_fe_NFC


    !links

        gamma_lp_NFC := pd_lp_NFC * lgd_lp_NFC;
        gamma_ln_NFC := pd_ln_NFC * lgd_ln_NFC;


    !equations

        ap_NFC = ap_lp_NFC + ap_ln_NFC + ap_NFC * ap_fe_NFC;

        ap_ln_NFC = gamma_ln_NFC * ln_NFC;

        ap_lp_NFC = gamma_lp_NFC * lp_NFC;

        ap_fe_NFC = + c0_ap_fe_NFC * ap_fe_NFC{-1} + shock_ap_fe_NFC;

        ap_to_l_NFC = ap_NFC / l_NFC;


!variables

    "Allowances for expected credit losses, total" af
    "Allowances to gross loans ratio, total" af_to_l


!log-variables !all-but
    af_to_l


!equations

    af = + af_HH + af_MG + af_NFC ;
    af_to_l = af / l;


    !variables
        "Present value of expected cash flows from unit static pool" pvx_HH
        "Allowances for expected credit losses, HH" af_HH
        "Allowances to gross loans ratio, HH" af_to_l_HH


    !log-variables !all-but
        af_to_l_HH


    !parameters
        c1_af_HH


    !equations


        "Allowances for expected credit losses, HH"
        af_HH = l_HH - c1_af_HH * (pvx_HH*lp_HH + lnc_HH);

        "Present value of expected cash flow from unit static pool, HH"
        pvx_HH = (1 - q_HH{+1})/(1 + rl_HH)*(theta_lp_HH + rl_HH + (1 - theta_lp_HH)*pvx_HH{+1}) + (1 - lambda_HH) * q_HH{+1};


        "Allowances to gross loans ratio, HH"
        af_to_l_HH = af_HH / l_HH;


    !variables
        "Present value of expected cash flows from unit static pool" pvx_MG
        "Allowances for expected credit losses, MG" af_MG
        "Allowances to gross loans ratio, MG" af_to_l_MG


    !log-variables !all-but
        af_to_l_MG


    !parameters
        c1_af_MG


    !equations


        "Allowances for expected credit losses, MG"
        af_MG = l_MG - c1_af_MG * (pvx_MG*lp_MG + lnc_MG);

        "Present value of expected cash flow from unit static pool, MG"
        pvx_MG = (1 - q_MG{+1})/(1 + rl_MG)*(theta_lp_MG + rl_MG + (1 - theta_lp_MG)*pvx_MG{+1}) + (1 - lambda_MG) * q_MG{+1};


        "Allowances to gross loans ratio, MG"
        af_to_l_MG = af_MG / l_MG;


    !variables
        "Present value of expected cash flows from unit static pool" pvx_NFC
        "Allowances for expected credit losses, NFC" af_NFC
        "Allowances to gross loans ratio, NFC" af_to_l_NFC


    !log-variables !all-but
        af_to_l_NFC


    !parameters
        c1_af_NFC


    !equations


        "Allowances for expected credit losses, NFC"
        af_NFC = l_NFC - c1_af_NFC * (pvx_NFC*lp_NFC + lnc_NFC);

        "Present value of expected cash flow from unit static pool, NFC"
        pvx_NFC = (1 - q_NFC{+1})/(1 + rl_NFC)*(theta_lp_NFC + rl_NFC + (1 - theta_lp_NFC)*pvx_NFC{+1}) + (1 - lambda_NFC) * q_NFC{+1};


        "Allowances to gross loans ratio, NFC"
        af_to_l_NFC = af_NFC / l_NFC;


!postprocessor


        pct_aroc_y = 100 * ((y/y{-1})^4 - 1);
        pct_roc4_y = 100 * (y/y{-4} - 1);
    
        pct_aroc_y_tnd = 100 * ((y_tnd/y_tnd{-1})^4 - 1);
        pct_roc4_y_tnd = 100 * (y_tnd/y_tnd{-4} - 1);
    
        pct_aroc_ny = 100 * ((ny/ny{-1})^4 - 1);
        pct_roc4_ny = 100 * (ny/ny{-4} - 1);
    
        pct_aroc_cpi = 100 * ((cpi/cpi{-1})^4 - 1);
        pct_roc4_cpi = 100 * (cpi/cpi{-4} - 1);
    
        pct_aroc_e = 100 * ((e/e{-1})^4 - 1);
        pct_roc4_e = 100 * (e/e{-4} - 1);
    
        pct_aroc_l = 100 * ((l/l{-1})^4 - 1);
        pct_roc4_l = 100 * (l/l{-4} - 1);
    
        pct_aroc_cpiw = 100 * ((cpiw/cpiw{-1})^4 - 1);
        pct_roc4_cpiw = 100 * (cpiw/cpiw{-4} - 1);
    
        pct_aroc_q_hh = 100 * ((q_hh/q_hh{-1})^4 - 1);
        pct_roc4_q_hh = 100 * (q_hh/q_hh{-4} - 1);
    
        pct_aroc_q_nfc = 100 * ((q_nfc/q_nfc{-1})^4 - 1);
        pct_roc4_q_nfc = 100 * (q_nfc/q_nfc{-4} - 1);
    
        pct_aroc_d = 100 * ((d/d{-1})^4 - 1);
        pct_roc4_d = 100 * (d/d{-4} - 1);
    
        pct_aroc_d_lcy = 100 * ((d_lcy/d_lcy{-1})^4 - 1);
        pct_roc4_d_lcy = 100 * (d_lcy/d_lcy{-4} - 1);
    
        pct_aroc_bk = 100 * ((bk/bk{-1})^4 - 1);
        pct_roc4_bk = 100 * (bk/bk{-4} - 1);
    
        pct_aroc_ona = 100 * ((ona/ona{-1})^4 - 1);
        pct_roc4_ona = 100 * (ona/ona{-4} - 1);


        pct_y_gap = 100*(y_gap - 1);
    
        pct_yw_gap = 100*(yw_gap - 1);
    
        pct_re_gap = 100*(re_gap - 1);


        pct_aroc_l = 100 * ((l/l{-1})^4 - 1);
        pct_roc4_l = 100 * (l/l{-4} - 1);
        
            pct_aroc_l_HH = 100 * ((l_HH/l_HH{-1})^4 - 1);
            pct_roc4_l_HH = 100 * (l_HH/l_HH{-4} - 1);
           
        
            pct_aroc_l_MG = 100 * ((l_MG/l_MG{-1})^4 - 1);
            pct_roc4_l_MG = 100 * (l_MG/l_MG{-4} - 1);
           
        
            pct_aroc_l_NFC = 100 * ((l_NFC/l_NFC{-1})^4 - 1);
            pct_roc4_l_NFC = 100 * (l_NFC/l_NFC{-4} - 1);


        pct_aroc_ln = 100 * ((ln/ln{-1})^4 - 1);
        pct_roc4_ln = 100 * (ln/ln{-4} - 1);
        
            pct_aroc_ln_HH = 100 * ((ln_HH/ln_HH{-1})^4 - 1);
            pct_roc4_ln_HH = 100 * (ln_HH/ln_HH{-4} - 1);
           
        
            pct_aroc_ln_MG = 100 * ((ln_MG/ln_MG{-1})^4 - 1);
            pct_roc4_ln_MG = 100 * (ln_MG/ln_MG{-4} - 1);
           
        
            pct_aroc_ln_NFC = 100 * ((ln_NFC/ln_NFC{-1})^4 - 1);
            pct_roc4_ln_NFC = 100 * (ln_NFC/ln_NFC{-4} - 1);


        pct_aroc_lp = 100 * ((lp/lp{-1})^4 - 1);
        pct_roc4_lp = 100 * (lp/lp{-4} - 1);
        
            pct_aroc_lp_HH = 100 * ((lp_HH/lp_HH{-1})^4 - 1);
            pct_roc4_lp_HH = 100 * (lp_HH/lp_HH{-4} - 1);
           
        
            pct_aroc_lp_MG = 100 * ((lp_MG/lp_MG{-1})^4 - 1);
            pct_roc4_lp_MG = 100 * (lp_MG/lp_MG{-4} - 1);
           
        
            pct_aroc_lp_NFC = 100 * ((lp_NFC/lp_NFC{-1})^4 - 1);
            pct_roc4_lp_NFC = 100 * (lp_NFC/lp_NFC{-4} - 1);


        pct_aroc_new_l = 100 * ((new_l/new_l{-1})^4 - 1);
        pct_roc4_new_l = 100 * (new_l/new_l{-4} - 1);
        
            pct_aroc_new_l_HH = 100 * ((new_l_HH/new_l_HH{-1})^4 - 1);
            pct_roc4_new_l_HH = 100 * (new_l_HH/new_l_HH{-4} - 1);
           
        
            pct_aroc_new_l_MG = 100 * ((new_l_MG/new_l_MG{-1})^4 - 1);
            pct_roc4_new_l_MG = 100 * (new_l_MG/new_l_MG{-4} - 1);
           
        
            pct_aroc_new_l_NFC = 100 * ((new_l_NFC/new_l_NFC{-1})^4 - 1);
            pct_roc4_new_l_NFC = 100 * (new_l_NFC/new_l_NFC{-4} - 1);


        pct_aroc_ln_rec = 100 * ((ln_rec/ln_rec{-1})^4 - 1);
        pct_roc4_ln_rec = 100 * (ln_rec/ln_rec{-4} - 1);
        
            pct_aroc_ln_rec_HH = 100 * ((ln_rec_HH/ln_rec_HH{-1})^4 - 1);
            pct_roc4_ln_rec_HH = 100 * (ln_rec_HH/ln_rec_HH{-4} - 1);
           
        
            pct_aroc_ln_rec_MG = 100 * ((ln_rec_MG/ln_rec_MG{-1})^4 - 1);
            pct_roc4_ln_rec_MG = 100 * (ln_rec_MG/ln_rec_MG{-4} - 1);
           
        
            pct_aroc_ln_rec_NFC = 100 * ((ln_rec_NFC/ln_rec_NFC{-1})^4 - 1);
            pct_roc4_ln_rec_NFC = 100 * (ln_rec_NFC/ln_rec_NFC{-4} - 1);


        pct_aroc_lp_rec = 100 * ((lp_rec/lp_rec{-1})^4 - 1);
        pct_roc4_lp_rec = 100 * (lp_rec/lp_rec{-4} - 1);
        
            pct_aroc_lp_rec_HH = 100 * ((lp_rec_HH/lp_rec_HH{-1})^4 - 1);
            pct_roc4_lp_rec_HH = 100 * (lp_rec_HH/lp_rec_HH{-4} - 1);
           
        
            pct_aroc_lp_rec_MG = 100 * ((lp_rec_MG/lp_rec_MG{-1})^4 - 1);
            pct_roc4_lp_rec_MG = 100 * (lp_rec_MG/lp_rec_MG{-4} - 1);
           
        
            pct_aroc_lp_rec_NFC = 100 * ((lp_rec_NFC/lp_rec_NFC{-1})^4 - 1);
            pct_roc4_lp_rec_NFC = 100 * (lp_rec_NFC/lp_rec_NFC{-4} - 1);


            pct_aroc_lnw_HH = 100 * ((lnw_HH/lnw_HH{-1})^4 - 1);
            pct_roc4_lnw_HH = 100 * (lnw_HH/lnw_HH{-4} - 1);
        
            pct_aroc_lnw_MG = 100 * ((lnw_MG/lnw_MG{-1})^4 - 1);
            pct_roc4_lnw_MG = 100 * (lnw_MG/lnw_MG{-4} - 1);
        
            pct_aroc_lnw_NFC = 100 * ((lnw_NFC/lnw_NFC{-1})^4 - 1);
            pct_roc4_lnw_NFC = 100 * (lnw_NFC/lnw_NFC{-4} - 1);


            pct_aroc_lnc_HH = 100 * ((lnc_HH/lnc_HH{-1})^4 - 1);
            pct_roc4_lnc_HH = 100 * (lnc_HH/lnc_HH{-4} - 1);
        
            pct_aroc_lnc_MG = 100 * ((lnc_MG/lnc_MG{-1})^4 - 1);
            pct_roc4_lnc_MG = 100 * (lnc_MG/lnc_MG{-4} - 1);
        
            pct_aroc_lnc_NFC = 100 * ((lnc_NFC/lnc_NFC{-1})^4 - 1);
            pct_roc4_lnc_NFC = 100 * (lnc_NFC/lnc_NFC{-4} - 1);


            pct_aroc_ap_HH = 100 * ((ap_HH/ap_HH{-1})^4 - 1);
            pct_roc4_ap_HH = 100 * (ap_HH/ap_HH{-4} - 1);
        
            pct_aroc_ap_MG = 100 * ((ap_MG/ap_MG{-1})^4 - 1);
            pct_roc4_ap_MG = 100 * (ap_MG/ap_MG{-4} - 1);
        
            pct_aroc_ap_NFC = 100 * ((ap_NFC/ap_NFC{-1})^4 - 1);
            pct_roc4_ap_NFC = 100 * (ap_NFC/ap_NFC{-4} - 1);


        pct_car = 100 * car;
      
    
        pct_riskw = 100 * riskw;


        pct_l_to_4ny = 100 * l_to_4ny;
        
           pct_l_to_4ny_HH = 100 * l_to_4ny_HH;
        
           pct_l_to_4ny_MG = 100 * l_to_4ny_MG;
        
           pct_l_to_4ny_NFC = 100 * l_to_4ny_NFC;
        
    
        pct_new_l_to_ny = 100 * new_l_to_ny;
        
           pct_new_l_to_ny_HH = 100 * new_l_to_ny_HH;
        
           pct_new_l_to_ny_MG = 100 * new_l_to_ny_MG;
        
           pct_new_l_to_ny_NFC = 100 * new_l_to_ny_NFC;
        
    
        pct_new_l_to_l = 100 * new_l_to_l;
        
           pct_new_l_to_l_HH = 100 * new_l_to_l_HH;
        
           pct_new_l_to_l_MG = 100 * new_l_to_l_MG;
        
           pct_new_l_to_l_NFC = 100 * new_l_to_l_NFC;
        
    
        pct_ln_to_l = 100 * ln_to_l;
        
           pct_ln_to_l_HH = 100 * ln_to_l_HH;
        
           pct_ln_to_l_MG = 100 * ln_to_l_MG;
        
           pct_ln_to_l_NFC = 100 * ln_to_l_NFC;
        
    
        pct_ln_rec_to_l = 100 * ln_rec_to_l;
        
           pct_ln_rec_to_l_HH = 100 * ln_rec_to_l_HH;
        
           pct_ln_rec_to_l_MG = 100 * ln_rec_to_l_MG;
        
           pct_ln_rec_to_l_NFC = 100 * ln_rec_to_l_NFC;


        pct_r = 400 * r;
        
    
        pct_rw = 400 * rw;
        
    
        pct_prem = 400 * prem;
        
    
        pct_rona = 400 * rona;
        
    
        pct_rd_lcy = 400 * rd_lcy;
        
    
        pct_rd_fcy = 400 * rd_fcy;


           pct_new_rl_HH = 400 * new_rl_HH;
        
           pct_new_rl_MG = 400 * new_rl_MG;
        
           pct_new_rl_NFC = 400 * new_rl_NFC;


           pct_rl_HH = 400 * rl_HH;
        
           pct_rl_MG = 400 * rl_MG;
        
           pct_rl_NFC = 400 * rl_NFC;


           pct_q_HH = 400 * q_HH;
        
           pct_q_MG = 400 * q_MG;
        
           pct_q_NFC = 400 * q_NFC;


    prof_prov_bk = (prof_prov/(bk{-1}/4))*100;
    prof_val_ass_bk = (prof_val_ass/(bk{-1}/4))*100;
    prof_int_liab_bk = (prof_int_liab/(bk{-1}/4))*100;
    prof_val_liab_bk = (prof_val_liab/(bk{-1}/4))*100;
    prof_val_bk = (prof_val/(bk{-1}/4))*100;
    prof_int_ona_bk = (prof_int_ona/(bk{-1}/4))*100;
    prof_other_bk = (prof_other/(bk{-1}/4))*100;
    prof_int_loans_bk = (prof_int_loans/(bk{-1}/4))*100;


    share_ap_nfc = (ap_nfc/l_nfc)*100;
    share_ap_hh = (ap_hh/l_hh)*100;


!preprocessor


        l = + l_HH + l_MG + l_NFC ;
    
        ln = + ln_HH + ln_MG + ln_NFC ;
    
        ln_rec = + ln_rec_HH + ln_rec_MG + ln_rec_NFC ;


        l_to_4ny = l / (4*ny);
        
            l_to_4ny_HH = l_HH / (4*ny);
        
            l_to_4ny_MG = l_MG / (4*ny);
        
            l_to_4ny_NFC = l_NFC / (4*ny);


    ln_rec_to_l = ln_rec / l;
    
        ln_rec_to_l_HH = ln_rec_HH / l_HH;
    
        ln_rec_to_l_MG = ln_rec_MG / l_MG;
    
        ln_rec_to_l_NFC = ln_rec_NFC / l_NFC;
