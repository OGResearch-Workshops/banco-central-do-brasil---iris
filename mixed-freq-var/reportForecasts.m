
close all
clear
mkdir html

load mat/runForecasts.mat db du fb1 fu1 endBalanced endFcast


startChart = qq(2020,1);
endChart = endFcast;
tableDates = endBalanced-3 : endFcast;

chartDb = databank.merge("horzcat", fb1, fu1, du);
legend = ["Balanced", "Unbalanced conditional", "History"];

r = rephrase.Report("Near Term Forecast", tableOfContents=true);

highlight = rephrase.Highlight(endBalanced+1, endBalanced+2);


% Pager summary

p = rephrase.Pager("Pager summary", "dateFormat", "YYYY:Q");

p ...
    + rephrase.Chart.fromSeries( ...
        {"GDP Q/Q", startChart, endChart, "highlight", highlight} ...
        , {legend, chartDb.pct_gdp, "markers", true} ...
    ) ...
    + rephrase.Chart.fromSeries( ...
        {"CPI Q/Q", startChart, endChart, "highlight", highlight} ...
        , {legend, chartDb.pct_cpi, "markers", true} ...
    ) ...
    + rephrase.Chart.fromSeries( ...
        {"Industrial production Q/Q", startChart, endChart, "highlight", highlight} ...
        , {legend, chartDb.pct_ip, "markers", true} ...
    ) ...
    + rephrase.Chart.fromSeries( ...
        {"Broad money Q/Q", startChart, endChart, "highlight", highlight} ...
        , {legend, chartDb.pct_bm, "markers", true} ...
    ) ...
;


r + p;
r + rephrase.Pagebreak();


% Q/Q summary

g = rephrase.Grid("Summary for Q/Q", 2, 2, "dateFormat", "YYYY:Q");

g ...
    + rephrase.Chart.fromSeries( ...
        {"GDP Q/Q", startChart, endChart, "highlight", highlight} ...
        , {legend, chartDb.pct_gdp, "markers", true} ...
    ) ...
    + rephrase.Chart.fromSeries( ...
        {"CPI Q/Q", startChart, endChart, "highlight", highlight} ...
        , {legend, chartDb.pct_cpi, "markers", true} ...
    ) ...
    + rephrase.Chart.fromSeries( ...
        {"Industrial production Q/Q", startChart, endChart, "highlight", highlight} ...
        , {legend, chartDb.pct_ip, "markers", true} ...
    ) ...
    + rephrase.Chart.fromSeries( ...
        {"Broad money Q/Q", startChart, endChart, "highlight", highlight} ...
        , {legend, chartDb.pct_bm, "markers", true} ...
    ) ...
;

r + g;
r + rephrase.Pagebreak();


% Comparison table

t = rephrase.Table( ...
    "Comparison Table", tableDates ...
    , "DateFormat", "YYYY:Q" ...
    , "NumDecimals", 3 ...
    , "DisplayRows", struct('Diff', true, 'Baseline', true, 'Alternative', true) ...
    , "RowTitles", struct('Diff', "Diff", 'Baseline', 'Balanced', 'Alternative', 'Unbalanced') ...
);

t ...
    + rephrase.DiffSeries("GDP Q/Q", fb1.pct_gdp, fu1.pct_gdp) ...
    + rephrase.DiffSeries("CPI Q/Q", fb1.pct_cpi, fu1.pct_cpi) ...
    + rephrase.DiffSeries("Industrial production Q/Q", fb1.pct_ip, fu1.pct_ip) ...
    + rephrase.DiffSeries("Broad money Q/Q", fb1.pct_bm, fu1.pct_bm) ...
;

r + t;
r + rephrase.Pagebreak();


% Description of model

r + rephrase.Text.fromFile( ...
    "NTF VAR models" ...
    , "ntf-var-models.md" ...
    , "parseFormulas", true ...
);

r + rephrase.Pagebreak();


% Build the HTML file

build( ...
    r, "html/reportForecasts" ...
    , source="web" ...
    , userStyle="ntf.css" ...
);

